Chapter 1
1 Introduction
Using general visual cues to take decisions is a capacity we humans take for granted. Even a one-year old child could perform the basic computer vision tasks like, recognition by appearance, tracking, 3d reconstruction and pose estimation. Counterintuitively, these simple tasks follow a principle called Moravec's Paradox [1]. The principle says the following:
..high-level reasoning requires very little computation, but low-level sensorimotor skills require enormous computational resources. . .
Computer vision is in charge of generating the sensor data and also the percepts for any kind of automated learning agent. The agent, in turn, is in charge of mapping those percepts into actions. The agent's work correspond to the reasoning part of the previous statement that according to Moravec is the easiest part. However, the sensorimotor part is given by the computer vision tasks and requires enormous
computational resources. A famous quote of Geoffrey Hinton puts it like this:
When we are learning to see, nobody is telling us what the right answers are -- we just look. Every so often, your mother says "that is a dog", but that is very little information. You would be lucky if you got a few bits of information -- even one bit per second -- that way. The brains' visual system has 1014 neural connections. And you only live for 109 seconds. So it is no use learning one bit per second. You need more like 105 bits per second. And there is only one place you can get that much information: from the input itself. -- Geoffrey Hinton, 1996 (extracted from [2]).
For example, a colored image 500x500 has 500(height) � 500(width) � 3(channels) � 8(bits per byte) = 6000000 = 6 � 106 bits. Considering each one as a feature for conventional (tabular) training would be intractable. Among the vast amount of information encoded in the image there is generally already an intrinsic data structure, for example a neighboring pixels window under the assumption of similar pixel intensities inside. At a higher level, different views of the same scene can be combined to reconstruct and deduce a 3D image [3], e.g. using the stereographic epipolar plane. Most of these techniques tend to encode optimal substructures and thereby can be efficiently exploited using dynamic programming.
One of the most complicated tasks is to segment an image into areas. This task is called dense prediction [4] because we are predicting a class for every pixel in the image and it requires special algorithms that do not waste themselves by evaluating each pixel in isolation. Also, we need to find the proper accuracy metric that is in accordance with the task at hand. Different segmentation subtasks exploit different structural features. So, it would be desirable to generate a set of accuracy metrics that reflects our objective and then to maximize this set will be equivalent to maximize the abstract tasks' performance. For example, when dealing with segmenting cars using a latent SVM for building a generative deformable parts model, the metric could be inversely weighted by the vehicle-part area proportion to the overall car size [5].
In this thesis, we will tackle the problem of segmenting the parking blocks captured by outdoors surveillance cameras. The following section explains why this problem is important and the specific way in which we will measure success.
Chapter 2 provides context for the intuitions and related work for tackling this or similar problems in parking lots.
Chapter 3 explains the methodology that we have followed in detail. The methodology is simple but requires a good understanding of the data modules that were
provided and the contribution each one had to envision future automation of these tasks or to improve accuracy.
Chapter 4 presents all the experimental results obtained. Thus, it presents what they mean in terms of expected landscape interaction, accuracy and the algorithms used.
Finally, Chapter 5 outlines the conclusions of this work and a suggested maturity path for scaling up the system to other dimensions, including response time, size of the parking lot and segmentation of similar geometrical structure in the same satellite image.
1.1 Motivation and Proposal
In the following section we discuss the current situation inside parking lots that drives the proposal of this thesis. First, we will review the security problem in parking lots and their tendency in M�xico and abroad. Then, we will explore current solutions industry has given and the reasons that have hindered their acceptance to the bulk of parking lots. Segmentation of parking blocks is thus proposed. As a consequence, the next subsection explores the state of the art in seek of approaches for tackling this task. Finally and subject to the considerations
constructed before, we will define our action area with the aim of maximizing social welfare.
1.1.1 Security
Parking lots can be dangerous places. According to a crime investigation report of the Bureau of Justice Statistics of the United States in parking garages facilities, 9% of 2010 crimes occurred in parking places [6]. Thus, since 2007 United States Congress required the National Highway Traffic Safety Administration (NHTSA) start collecting data about non-traffic accidents such as the ones occurring in parking lots. Between 2008 and 2011, 363,000 people were injured in non-traffic crashes [7]. Just in 2012 4,720 people became injured in parking lots at the US [8]. Consequently, parking lots and garages ranked as the second most frequent place where nonviolent crimes took place and the third most frequent place in which violent crimes occurred [9].
Parking lots are getting bigger. According to the Instituto Mexicano para la Competitividad (IMCO), 42% of all square meters in Mexico City are dedicated to parking lots. The Instituto de Pol�ticas para el Transporte y el Desarrollo (ITDP) warns that from 2012 to 2013, parking lot places grew from 203,559 to 250,344,
with the same growth rate since 2009 [10]. It is clear we cannot stop this growth tendency, at least not for the moment.
Parking lot security actions are largely preemptive in Mexico. Our country is ranked second in the global impunity index [11] with a score of 75.7 points. After a crime was all over in a parking lot there is little the surveillance personnel can do to gather and expose incriminatory evidence. Even so, there is little follow up of each case in the state penal system. Thus, current solutions tend to foster preemptive action (rather than corrective or cohesive), i.e. prevent crime from taking place by triggering early alerts and fast responses at the slightest sign. Real-time preemptive action often require constant surveillance by the surveillance personnel.
1.1.2 Current Surveillance Solutions
Given that parking lots are getting bigger it is increasingly difficult to ensure security. Colossal parking lots make impossible for human guards to protect all of its the vehicles at the same time, and more importantly, all of its users. Avant-garde solutions include a completely computerized parking lot with a prodigious capacity of 700 vehicles. This parking lot is located in Reforma 180, and it is the largest
parking lot in Latin America. In this kind of parking lot, entrance is limited to a few authorized personnel, thus reducing internal exposure to criminal activities.
Top-notch technology is frequently expensive. Although the Reforma 180 parking lot seems like a great technological advancement, it does not constitute an innovation because it is too expensive. 12 million dollars were required for its mere construction, not to mention maintenance and salary costs [12]. Besides, it creates new bottlenecks and dependencies. Ground sensors, inductive loop detectors, active infrared sensors and magnetometers are all expensive [13], and each requires an specific environment to operate properly, e.g covered parking lots or an special power supply infrastructure.
Fortunately, as we mentioned earlier, there are cheaper solutions that take advantage of current camera infrastructure. A study [14] reveals that just by the mere act of installing cameras, a 20% crime rate reduction can be achieved, irrespective of videos later usage. Nevertheless, an integrated vision based solution is complex, and faces the challenges of multiscale information gathering, contextual event detection and the deployment of large systems [15]. Despite the fact that since mid 90's camera sensor size costs had been dropping exponentially [16], and thus lighting conditions are no longer a critical factor,1 camera surveillance has not yet
1Bigger camera sensors require less ISO exposure and produce higher quality images on poor lighting
been widely accepted. This is owning to the fact that market have not yet provided suitable and scalable solutions. These solutions must be camera-independent solution for the implementation to be accessible enough. We will further develop this idea in the action area section.
Each area in a parking lot hold a different set of contrasting behaviors. Thus, if we could detect and segment the corresponding pixels that compose the parking block areas, then we would be able to provide priors for a second generative algorithm, particularly one that could be able to detect suspicious behavior. That said, lets explore the challenges that this particular task of segmenting parking blocks has in the next section.
1.1.3 Computational Challenges
We already explained the computational challenges of the segmentation task in the introduction. We now introduce the problems that arise from our specific task of segmenting parking blocks in surveillance camera perspective images. Lets start by building our intuition from the concept of feature design, i.e. what are the features that can be exploited to recognize and segment these areas. The following
conditions.
list shows a non-comprehensive enumeration that comes to the authors mind and their corresponding challenges.
1.1.3.1 No Learning, Extract Areas by Rule Engineering over Features
The features can be extracted directly without depending on learning methods by using heuristics from the shape of blobs or contours. Color, shape and angle between lines can be used, for example using a Hough transformation [17] shown in Figure 1.2 Yellow is a widely used color to paint parking spots that is rarely found on nature. For example, [19] suggest that a combination of morphological opening, canny and threshold can achieve 85% average accuracy in segmentation of parking lots, i.e. segmenting a full parking lot. Lane [20] and car [21] detection from aerial images can help. Even though we must suggest more powerful heuristics for segmenting each of the parking blocks (i.e. include the cases in which the yellow line is occluded), much can be gained by applying Bayesian theory to improve accuracy of the overall algorithm. The output class of a discriminative algorithm corresponds to the probability distribution mode. This mode is called maximum a posteriori [2]. It is a probability defined by p(y|x, D) and implicitly optimized
2Generalized Hough transform can be used to find any geometrical shape [18].
to reduce the empirical risk. Even though it is usually aggregated at the output to yield 1 for the most probable hypothesis, before that it is a probability and it lends itself to provide priors for Bayesian learning [22] so you can use it as input for a generative algorithm. For example, an event-detection-based algorithm that uses a Dynamic Bayesian Network can use this probability priors in the parent nodes that affect the conditional probability tables without need to infer the full joint probability distribution. Furthermore, this priors could modify the weights when doing stochastic sampling to infer these probability tables, a technique called likelihood weightting. In such a way we can introduce previous knowledge in the computer vision pipeline. Dynamic belief (Bayesian) networks were used first time in computer vision for traffic scene analysis on [23].
� Pros � Highly interpretable result. Given that we are designing the features to feed our algorithm and there is no learning involved, there is no black-box model. So, we can evaluate the quality of each individual feature and just apply the rules system we have designed.
� Cons � It is hard to find a set of heuristics for each camera perspective that generalizes well for each parking lot type. Heuristics in this case refers

to the data cleansing techniques, e.g. histogram equalization [24] to augment details' contrast in shadowed regions. These techniques are parametric in the sense that they require parameter tuning, either by learning or empirically. For example, to apply histogram equalization using a too-small window would not have any appreciable effect. However, a too-big window would degrade important details.

3 parking spots block

5 parking spots block

7 parking spots block

-4000 -3000 -2000 -1000
0 1000 2000 3000 4000
-80

Hough transform of 3 parking spots block -60 -40 -20 0 20 40

60

80

(a) 3 parking spots

-4000 -3000 -2000 -1000
0 1000 2000 3000 4000
-80

Hough transform of 5 parking spots block -60 -40 -20 0 20 40

60

80

(b) 5 parking spots

-4000 -3000 -2000 -1000
0 1000 2000 3000 4000
-80

Hough transform of 7 parking spots block -60 -40 -20 0 20 40

60

80

(c) 7 parking spots

Figure 1: We can clearly discern a pattern in the Hough transform of this artificially generated satellite parking block.

In Figure 1 we see the following pattern:
1. All the splines converge on the center of the image. 2. There are four areas on the corners of the image that have constant area
and well defined vertices. 3. When increasing the number of parking blocks the number of splines passing
through the center also increases proportionally.
1.1.3.2 Learn Areas from Movement in Videos
Movement from either cars, pedestrians, or other unidentified entities can be easily identified in video [25]. Then, speed deltas can be used to classify and rotation moments can be used to classify the areas, e.g. Hidden Markov Models that explain the distribution of those speeds onto the area [26]. We also can pre-classify blobs taken from a previous movement-based background subtraction algorithm to improve efficiency and accuracy using Bayes theorem.
� Pros � Performs well even when no appearance features of parking lot are available, e.g. on improvised temporary parking lot there is no parking lot demarcation.
� Cons � Requires more frames from each camera perspective to make sense of the data than the algorithms that extract features from single frames.
1.1.3.3 Learn Areas from Known Entities Distribution
Segmentation and 3D reconstruction of known3 entities like cars, parking spots or pedestrians can be used when positioned in parallel to find parking blocks.4 Thus, we can learn an ensemble of latent variables and take a boosting approach. This approach was taken by the drone dataset [28] where the authors developed a Layout Proposal Network. For example we can use Markov Random Fields and give a higher weight to probabilities when a car was found nearby colinear. There are many elementary algorithms that can be applied to detect if the proposed objects are linear e.g. the Segmented Least Squares algorithm [29].
� Pros � There are many algorithms performing well for each individual domain area.
� Cons � Other pre-trained models or a single model must be available for each known entity. The idea is to first start the pipeline by classifying the known entities, then estimate the density by using a non-parametric method like k-nearest neighbors (measuring the radii of circles that
3They are known in the sense they have a standardized or at least bounded size range. 4Vehicle types information can be used to affine this 3D reconstruction [27].
enclose a fixed number of instances). In the case of parking blocks with predefined shapes, one idea that I have is to fit the parameters of a Gaussian using maximum-likelihood (minimize the negative log likelihood) and kernels of different shapes [30].
1.1.3.4 Learn Areas from Static Image Examples
Supervised learning methods can learn from ground demarcation appearance features to detect parking spots. Area segmentation can be learned using methods like Convolutional Neural Network (CNN), Viola-Jones boosted cascade detection or even using simple template matching (sliding patches). Histogram and contrast normalization can be used to remove color distortions from shadows and climate conditions from the samples and reduce empirical risk. Instead of designing the features manually, we could also let a convolutional neural networks learn the features automatically [31], [32].
� Pros � In most cases, the bulk of feature learning is made automatically; but we can also set some parameters, features and do image preprocessing. � We can control generalization by adding more examples to the dataset.
� Cons 
� It requires a special dataset with annotated parking blocks. � It is difficult to create a dataset that generalizes well for each camera
perspective. Figure 2 shows two images of the same parking lot but different perspectives where learning a set of similar features to segment parking lots would require many samples from each perspective.

(a) frontal

(b) birds-eye

Figure 2: Difficulty in learning to generalize onto different perspectives in the same parking lot: (a) shows a frontal and sunset lighting view of the parking lot. (b) shows a birds-eye and poor lighting view. These images are notably different even though they are from cameras of the same parking lot.

1.1.4 Action Area Proposal
In the previous two sections we identified the importance of the problem at Mexico and the insufficiency of current industry solutions. We also briefly reviewed the technical difficulties each imply. To sum up, an effective solution must comply with the following characteristics:
� Scales well on bigger parking lots. This is due to the fact that just one segmentation on the satellite image is useful to segment various camera perspectives simultaneously onto the same parking lot. Figure 3 shows a big parking lot where scalability is an important issue.
� Allows real-time preemptive action. � Reduces sensor cost by taking advantage of current infrastructure. � It could provide priors to a second generative algorithm that would be highly
interpretable. � Have high Sensitivity (TPR) to avoid type II errors. People's lives might be
at danger!. � Have high Specificity (TNR) to avoid type I errors. False alarms can tire
down personnel, lest the system becomes like The boy who cried wolf. � Camera-independent solution, i.e. it works well with any type of camera,
regardless of the intrinsic calibration matrix, resolution, color layout, etc.
Figure 3: A big parking lot in which scalability is an important issue. We see how multiple hypothetical camera image perspectives, denoted by green faded areas corresponding to the field of view of each, can benefit from a single satellite image segmentation. We propose to segment parking areas in the surveillance camera images' perspective. From the elementary areas of a parking lot there are just two that accrue a large percent of the area and have semantic significance for behavior detection algorithms, those are traffic lanes and parking blocks. Parking blocks concentrate third-party assets value, i.e. cars. Also, crimes are often transgressed inside parked vehicles or are often involving a parked vehicle. Given that those vehicles park
over parking blocks, we choose to segment parking blocks in the surveillance camera images. By fulfilling this objective we will be able to:
� Regardless of the parking lot size, pay attention to the most dangerous areas i.e. parking blocks, assuming there is a camera in place.
� Increase the speed of response of behavior alert algorithms by limiting the data volume they use.
� Reuse cameras in place. No super fancy sensors are needed. � Boost the accuracy of algorithms that trigger the alert by area.
While talking about the current state of surveillance solutions in the previous section, we mentioned we require a camera-independent solution to ensure scalability. By camera-independent solution we mean a solution that can be applied to any parking lot image regardless of its scale. In this thesis, we propose to apply the segmentation algorithm to a completely different image, namely a satellite image, that is always on the same scale because we are extracting it from a single satellite system. In this way, we can outrightly avoid the problems related to sampling images at different scales.
The approach taken by [33] gave good results in classifying ground demarcation in satellite street images. They used a CNN. Parking blocks in a way have less
variability when seen from a satellite image than the sparse ground demarcation of streets. However, given that their task was of classification and in our case we are doing segmentation, we also support our claim bringing to the table the DeepGlobe 2018 challenge [34]. This challenge focus on segmentation and uses the same metrics as we do. They segment roads and buildings with a maximum Intersection Over Union (IoU) of 0.693. Thus, it is highly likely that we will achieve similar good results in a more simpler setup of just detecting parking blocks.
We will further mention benefits and details of this approach in Chapter 3.
1.2 Problem Definition
The problem we will solve in this thesis is segmenting parking blocks on surveillance camera images. For that purpose we will use satellite view for the same scene. More details about the methodology can be found on Chapter 3. The contributions of this work include the following:
� Confirm the hypothesis that using a convolutional neural network for segmenting parking blocks would achieve a good intersection over union performance. An IoU score > 0.5 is normally considered a "good" prediction, e.g. 10 different IoU thresholds are considered from 0.5 to 0.95 in the COCO challenge [35]. � Use a simple perspective transformation to obtain similar good results in a surveillance camera.
The next chapter will elaborate more on the the state-of-the-art comprised by CNN, homography (perspective) transformation and any other elementary method to use in the methodology pipeline explained in Chapter 3.