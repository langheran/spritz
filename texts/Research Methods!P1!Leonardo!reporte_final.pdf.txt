Reporte Final
Leonardo Mauricio Cañete Sifuentes, Nisim Hurst Monday 7 May 2018

Introduction
Convenience stores usually sell commodity products to people. These products have an standard cost stablished by the manufacturer targeting all the convenience stores regardless of brand, i.e. whether they are Oxxo, 7-Eleven, Gas Stations, etc. Thus, opportunities to improve profitability by reducing this cost is rather limited.
Notwithstanding, each brand of convenience store is highly competitive even you actually can see them stacked on the same location. Pricing management presents the best opportunity to improve profitability by swaying customers from other stores to our own while decreasing customer churn.
Thus, we want to optimize the following profit formula:
P rof it = (P rice - Cost)  U nits
There are two ways Price affect sales volume:
· A low price in one product may attract customers, from the competitors stores to our store and increase sales volume over that product.
· A low price in one product can improve the sales of other ancillary products (market basket analysis).
We just said Price is a variable we could move, but what about Units. If we increase too much the price units may drop following a price elasticity formula.
Other factors that can also affect sales volume and led us to higher order interactions are:
· Seasonality · Weather conditions · Price of products on the same category · Competitors price · Cross elasticity of demand (cannibalization or halo effect)
In the following section we will explain how to develop a pricing strategy that can cope to these problems seamlessly.

Problem definition

We are given a dataset of products with information about: the companies sale information, such as product

price, product cost, units sold, income obtained, and if there's a promotion; the competitor's price; and

climate features, such as rain intensity and temperature. Each week the company can modify the price at

which the product is sold, which will impact the sales. Our goal is to establish a pricing strategy to maximize

the profit per product. A pricing strategy for a product is a sequence of prices p1p2 . . . pn . The objective is

to select the sales

the sequence of would be given

prices that maximize the profit

by

n t=1

ptut

and

the

costs

by

margin, which is given as a

n t=1

ctut,

where

pt

is

the

percentage,

sales-costs sales

,

price at week t, ct is the

cost at week t, and ut are the number of units sold at time t.

1

Assumptions and hypothesis
Hypothesis · A simple linear model is enough to optimize the price to maximize profit.
Assumptions · The linear model does not consider the time information. · The linear model considers a single optimized price; the prices in the sequence do not change over time, p1= p2 = . . . = pn.
Solution method
Data cleansing A first approach is to detect correlations by just taking a look to the feature correlation matrix:

Figure 1: Pandas Feature Correlation

Figure 1 show a clear relation between variables marked by a red tonality. Some of the expected variables are: 1. Real Price vs System Price, 2. Net Cost vs System Price and 3. Temperatures vs Week. But we also find other surprisingly related variable such as Date vs Sales Amount more strong to Date vs Units maybe because promotions are placed by time of the year and are already optimized.

PCA
Some of the features might seem irrelevant to adjust the pricing strategy, such as the climate features. So, we applied PCA to find out which features explain most of the variance in the dataset. The following table shows the proportion of variance explained by the first two of the principal components:

Standard deviation

PC1 PC2 24.1637 11.0175

2

Proportion of variance Cumulative proportion

PC1
0.7928 0.7928

PC2
0.1648 0.9577

We only use the first component, since it accounts for more than 95% of the data variance. The weights for each feature for the first principal component are as follows:

SYSTEM.PRICE Competitor.s.price NetCost REAL.PRICE MIN.TEMP AVG.TEMP MAX.TEMP RAIN.INTENSITY PROMOTION

PC1
-0.62082 -0.33693 -0.42183 -0.56843 0.000242 -0.00057
-0.0014 -0.0003 0.001452

PC2
-0.27769 0.931724 -0.02165 -0.23294 0.004263 0.003175 0.002332 0.002622 -0.00283

As expected, the selling price is the most important feature, followed by the cost and competitor price. We previously saw that the system price and real price are highly correlated, so we should remove one of them. Since the system price seems to have many missing values, prices listed as zero, and is less representative of the reality, we chose to remove it. We also remove the temperature, rain and promotion features, since their weights are very close to zero.
Removing useless products for regression model
For each product, we have up to 93 observations, one per week. This limits the applicability of some machine learning models which need more data. Trying to find some seasonality in the data is also difficult, since we have less than two years of information. For some products, we have even less weeks registered. To avoid further problems with the number of observations, we remove all products for which we have less than 93 observations. This leaves us with 581 out of 1030 products.
We also found that there are some products where, most of the, time the price does not change, in some extreme cases the price never changes. Since that's our main source of information for the regression model, we only keep the products where the price remains unchanged during less than 0.95 of the weeks. This leaves us with a final amount of 444 products.
Detecting seasonality trends
Now that we have seen that most of the data features doesn't explain the bulk of variance in the data we can safely infer there are other latent factors responsible for these changes in units sold. Autoregressive models use the data of one variable of the previous step to predict that same variable.
As aforementioned, profit is proportional to units sold. Are those units sold a proper feature to predict using autoregression? Well, lag plots allow to detect those kind of relationships through time in the date. Lets see how it behaves:

3

Figure 2: Pandas Lag Plot

We can see from Figure ?? that there is a clear linear correlation relationship that we can use to construct a regression model out of just these periodic changes in the units feature.

Regression model
In [1], the authors suggest that one can consider a monopoly, and consider simple linear models on the price to estimate the optimize the cost such that the number of units sold is maximized. They make several simplifying assumptions: since they consider a monopoly, they don't consider the competitors cost; they assume a fixed production cot, so it's not part of their lineal model.
They do consider some temporality information, in our proposed regression model, we will not take it into account, but we will test models which consider the cost and competitors price. We test several regression models, fitting the same type of model for each individual product. Then, for each regression model, we take the information of each week for the corresponding product as feasible solutions; this way we ensure we are not fitting unrealistic values. We select the price which maximizes the expected units sold, according to the regression model. Since a price change might affect sales, we will also make a comparison with a simulation in which we've increased the number of units sold, according to the price elasticity of demand.

Price elasticity We calculated the elasticity from week to week as:

elasticity

=

%change in quantity %change in price

The following figure shows the distribution of the mean elasticity per product, removing outliers. As it can be seen, there's a hughe variation in the distribution.

4

Figure 3: Mean elasticity distribution
Figure 4: Elasticity distribution
In general, the prices can be said to be elastic, since only 19 products have a mean absolute elasticity lower or equal than one. To simulate the behaviour of changing the price of a product, we take the price difference between the real price and our optimized price and, using the weekly elasticity information, we get an expected demand, which we use to calculate our expected profit with our optimized price. If we have a negative elasticity for a given week, we expect to sell more units if we reduce the price, so if the optimized price is lower than the real price, the expected units are going to be higher. If, on the other hand, the optimized price is higher, the expected units are lower, this way the optimized model is also penalized. Since we are only simulating how the sold units change, we also evaluate the model without considering price elasticity, using only the units we know were sold.
Test and results
In each test we will show one proposed model and compare it with the actual data in terms of their profit margin distributions. We will also compare the number of products for which the profit was positive. Furthermore, we assume the units sold changed according to the weekly elasticity, in any, make the same analysis.
· First we consider a simple linear model which only takes into account
5

Conclusions
Although
References
[1] O. Besbes, A. Zeevi, O. Besbes, and A. Zeevi, "On the ( Surprising ) Sufficiency of Linear Models for Dynamic Pricing with Demand Learning On the ( Surprising ) Sufficiency of Linear Models for Dynamic Pricing with Demand Learning," no. January, pp. 1­27, 2015.
6

